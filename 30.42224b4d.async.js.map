{"version":3,"sources":["src/pages/dashboard/analysis/components/OfflineData.tsx"],"names":["_locale","__webpack_require__","_react","_interopRequireDefault","_Charts","_NumberInfo","_style5","CustomTab","_ref","data","currentKey","currentTabKey","default","createElement","_row","gutter","style","width","margin","type","_col","span","title","name","subTitle","FormattedMessage","id","defaultMessage","gap","total","concat","cvr","theme","undefined","paddingTop","Pie","animate","inner","tooltip","percent","height","TabPane","OfflineData","_ref2","activeKey","loading","offlineData","offlineChartData","handleTabChange","_card","className","offlineCard","bordered","marginTop","_tabs","onChange","map","shop","tab","key","padding","TimelineChart","titleMap","y1","formatMessage","y2"],"mappings":"wSACAA,EAAAC,EAAA,QACAC,EAAAC,EAAAF,EAAA,SAGAG,EAAAH,EAAA,QACAI,EAAAF,EAAAF,EAAA,SACAK,EAAAH,EAAAF,EAAA,SAEMM,EAAY,SAAAC,GAAA,IAChBC,EADgBD,EAChBC,KACeC,EAFCF,EAEhBG,cAFgB,OAOhBT,EAAAU,QAAAC,cAAAC,EAAAF,SAAKG,OAAQ,EAAGC,OAASC,MAAO,IAAKC,OAAQ,SAAWC,KAAK,QAC3DjB,EAAAU,QAAAC,cAAAO,EAAAR,SAAKS,KAAM,IACTnB,EAAAU,QAAAC,cAACR,EAAAO,SACCU,MAAOb,EAAKc,KACZC,SACEtB,EAAAU,QAAAC,cAACb,EAAAyB,kBACCC,GAAG,8CACHC,eAAe,oBAGnBC,IAAK,EACLC,MAAK,GAAAC,OAAgB,IAAXrB,EAAKsB,IAAV,KACLC,MAAOtB,IAAeD,EAAKc,KAAO,aAAUU,KAGhD/B,EAAAU,QAAAC,cAAAO,EAAAR,SAAKS,KAAM,GAAIL,OAASkB,WAAY,KAClChC,EAAAU,QAAAC,cAACT,EAAA+B,KACCC,SAAS,EACTC,MAAO,IACPC,SAAS,EACTpB,QAAS,EAAG,EAAG,EAAG,GAClBqB,QAAoB,IAAX9B,EAAKsB,IACdS,OAAQ,QAMRC,oBAEFC,EAAc,SAAAC,GAAA,IAClBC,EADkBD,EAClBC,UACAC,EAFkBF,EAElBE,QACAC,EAHkBH,EAGlBG,YACAC,EAJkBJ,EAIlBI,iBACAC,EALkBL,EAKlBK,gBALkB,OAalB9C,EAAAU,QAAAC,cAAAoC,EAAArC,SAAMiC,QAASA,EAASK,UAAW5C,EAAAM,QAAOuC,YAAaC,UAAU,EAAOpC,OAASqC,UAAW,KAC1FnD,EAAAU,QAAAC,cAAAyC,EAAA1C,SAAMgC,UAAWA,EAAWW,SAAUP,GACnCF,EAAYU,IAAI,SAAAC,GAAI,OACnBvD,EAAAU,QAAAC,cAAC4B,GAAQiB,IAAKxD,EAAAU,QAAAC,cAACN,GAAUE,KAAMgD,EAAM9C,cAAeiC,IAAee,IAAKF,EAAKlC,MAC3ErB,EAAAU,QAAAC,cAAA,OAAKG,OAAS4C,QAAS,WACrB1D,EAAAU,QAAAC,cAACT,EAAAyD,eACCrB,OAAQ,IACR/B,KAAMsC,EACNe,UACEC,IAAI,EAAA/D,EAAAgE,gBAAgBtC,GAAI,wCACxBuC,IAAI,EAAAjE,EAAAgE,gBAAgBtC,GAAI,qDAUzBgB","file":"30.42224b4d.async.js","sourcesContent":["import { Card, Col, Row, Tabs } from 'antd';\nimport { FormattedMessage, formatMessage } from 'umi-plugin-react/locale';\nimport React from 'react';\nimport { OfflineChartData, OfflineDataType } from '../data.d';\n\nimport { TimelineChart, Pie } from './Charts';\nimport NumberInfo from './NumberInfo';\nimport styles from '../style.less';\n\nconst CustomTab = ({\n  data,\n  currentTabKey: currentKey,\n}: {\n  data: OfflineDataType;\n  currentTabKey: string;\n}) => (\n  <Row gutter={8} style={{ width: 138, margin: '8px 0' }} type=\"flex\">\n    <Col span={12}>\n      <NumberInfo\n        title={data.name}\n        subTitle={\n          <FormattedMessage\n            id=\"dashboard-analysis.analysis.conversion-rate\"\n            defaultMessage=\"Conversion Rate\"\n          />\n        }\n        gap={2}\n        total={`${data.cvr * 100}%`}\n        theme={currentKey !== data.name ? 'light' : undefined}\n      />\n    </Col>\n    <Col span={12} style={{ paddingTop: 36 }}>\n      <Pie\n        animate={false}\n        inner={0.55}\n        tooltip={false}\n        margin={[0, 0, 0, 0]}\n        percent={data.cvr * 100}\n        height={64}\n      />\n    </Col>\n  </Row>\n);\n\nconst { TabPane } = Tabs;\n\nconst OfflineData = ({\n  activeKey,\n  loading,\n  offlineData,\n  offlineChartData,\n  handleTabChange,\n}: {\n  activeKey: string;\n  loading: boolean;\n  offlineData: OfflineDataType[];\n  offlineChartData: OfflineChartData[];\n  handleTabChange: (activeKey: string) => void;\n}) => (\n  <Card loading={loading} className={styles.offlineCard} bordered={false} style={{ marginTop: 32 }}>\n    <Tabs activeKey={activeKey} onChange={handleTabChange}>\n      {offlineData.map(shop => (\n        <TabPane tab={<CustomTab data={shop} currentTabKey={activeKey} />} key={shop.name}>\n          <div style={{ padding: '0 24px' }}>\n            <TimelineChart\n              height={400}\n              data={offlineChartData}\n              titleMap={{\n                y1: formatMessage({ id: 'dashboard-analysis.analysis.traffic' }),\n                y2: formatMessage({ id: 'dashboard-analysis.analysis.payments' }),\n              }}\n            />\n          </div>\n        </TabPane>\n      ))}\n    </Tabs>\n  </Card>\n);\n\nexport default OfflineData;\n"],"sourceRoot":""}