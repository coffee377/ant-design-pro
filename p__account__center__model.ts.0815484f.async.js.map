{"version":3,"sources":["src/pages/account/center/model.ts","src/pages/account/center/service.ts"],"names":["_service","__webpack_require__","Model","namespace","state","currentUser","list","effects","fetchCurrent","_regenerator","default","mark","_","_ref","call","put","response","wrap","_context","prev","next","queryCurrent","sent","type","payload","stop","fetch","_ref2","_ref3","_context2","queryFakeList","Array","isArray","reducers","saveCurrentUser","action","_objectSpread2","queryList","_request","_interopRequireDefault","_callee","abrupt","_callee2","params"],"mappings":"qNAGAA,EAAAC,EAAA,QAyBMC,GACJC,UAAW,gBAEXC,OACEC,eACAC,SAGFC,SACGC,aADMC,EAAAC,QAAAC,KAAA,SAAAH,EACOI,EADPC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,QAAAO,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,OADAN,EADZD,EACYC,KAAMC,EADlBF,EACkBE,IADlBG,EAAAE,KAAA,EAEkBN,EAAKd,EAAAqB,cAFvB,OAGL,OADML,EAFDE,EAAAI,KAAAJ,EAAAE,KAAA,EAGCL,GACJQ,KAAM,kBACNC,QAASR,IALN,wBAAAE,EAAAO,SAAAjB,KAQNkB,MARMjB,EAAAC,QAAAC,KAAA,SAAAe,EAAAC,EAAAC,GAAA,IAAAJ,EAAAV,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,QAAAO,KAAA,SAAAY,GAAA,eAAAA,EAAAV,KAAAU,EAAAT,MAAA,OASY,OADVI,EARFG,EAQEH,QAAaV,EARfc,EAQed,KAAMC,EARrBa,EAQqBb,IARrBc,EAAAT,KAAA,EASkBN,EAAKd,EAAA8B,cAAeN,GATtC,OAUL,OADMR,EATDa,EAAAP,KAAAO,EAAAT,KAAA,EAUCL,GACJQ,KAAM,YACNC,QAASO,MAAMC,QAAQhB,GAAYA,OAZhC,wBAAAa,EAAAJ,SAAAC,MAiBTO,UACEC,gBADQ,SACQ9B,EAAO+B,GACrB,SAAAC,EAAA1B,YACMN,GACJC,YAAa8B,EAAOX,eAGxBa,UAPQ,SAOEjC,EAAO+B,GACf,SAAAC,EAAA1B,YACMN,GACJE,KAAM6B,EAAOX,eAMNtB,uLCrEfoC,EAAAC,EAAAtC,EAAA,kBAEsBoB,sFAAf,SAAAmB,IAAA,OAAA/B,EAAAC,QAAAO,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAuB,OAAA,UACE,EAAAH,EAAA5B,SAAQ,qBADV,wBAAAQ,EAAAO,SAAAe,uCAIeV,uFAAf,SAAAY,EAA6BC,GAA7B,OAAAlC,EAAAC,QAAAO,KAAA,SAAAY,GAAA,eAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAY,OAAA,UACE,EAAAH,EAAA5B,SAAQ,kBACbiC,YAFG,wBAAAd,EAAAJ,SAAAiB","file":"p__account__center__model.ts.0815484f.async.js","sourcesContent":["import { AnyAction, Reducer } from 'redux';\nimport { EffectsCommandMap } from 'dva';\nimport { CurrentUser, ListItemDataType } from './data.d';\nimport { queryCurrent, queryFakeList } from './service';\n\nexport interface ModalState {\n  currentUser: Partial<CurrentUser>;\n  list: ListItemDataType[];\n}\n\nexport type Effect = (\n  action: AnyAction,\n  effects: EffectsCommandMap & { select: <T>(func: (state: ModalState) => T) => T },\n) => void;\n\nexport interface ModelType {\n  namespace: string;\n  state: ModalState;\n  effects: {\n    fetchCurrent: Effect;\n    fetch: Effect;\n  };\n  reducers: {\n    saveCurrentUser: Reducer<ModalState>;\n    queryList: Reducer<ModalState>;\n  };\n}\n\nconst Model: ModelType = {\n  namespace: 'accountCenter',\n\n  state: {\n    currentUser: {},\n    list: [],\n  },\n\n  effects: {\n    *fetchCurrent(_, { call, put }) {\n      const response = yield call(queryCurrent);\n      yield put({\n        type: 'saveCurrentUser',\n        payload: response,\n      });\n    },\n    *fetch({ payload }, { call, put }) {\n      const response = yield call(queryFakeList, payload);\n      yield put({\n        type: 'queryList',\n        payload: Array.isArray(response) ? response : [],\n      });\n    },\n  },\n\n  reducers: {\n    saveCurrentUser(state, action) {\n      return {\n        ...(state as ModalState),\n        currentUser: action.payload || {},\n      };\n    },\n    queryList(state, action) {\n      return {\n        ...(state as ModalState),\n        list: action.payload,\n      };\n    },\n  },\n};\n\nexport default Model;\n","import request from '@/utils/request';\n\nexport async function queryCurrent() {\n  return request('/api/currentUser');\n}\n\nexport async function queryFakeList(params: { count: number }) {\n  return request('/api/fake_list', {\n    params,\n  });\n}\n"],"sourceRoot":""}