{"version":3,"sources":["src/pages/list/basic-list/service.ts","src/pages/list/basic-list/model.ts"],"names":["_request","_interopRequireDefault","__webpack_require__","queryFakeList","_callee","params","_regenerator","default","wrap","_context","prev","next","abrupt","stop","removeFakeList","_callee2","_params$count","count","restParams","_context2","_objectWithoutProperties2","method","data","_objectSpread2","addFakeList","_callee3","_params$count2","_context3","updateFakeList","_callee4","_params$count3","_context4","_service","Model","namespace","state","list","effects","fetch","mark","_ref","_ref2","payload","call","put","response","sent","type","Array","isArray","appendFetch","_ref3","_ref4","submit","_ref5","_ref6","callback","id","Object","keys","length","reducers","queryList","action","appendList","arguments","undefined","concat"],"mappings":"6SAAAA,EAAAC,EAAAC,EAAA,kBAOsBC,uFAAf,SAAAC,EAA6BC,GAA7B,OAAAC,EAAAC,QAAAC,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,UACE,EAAAZ,EAAAO,SAAQ,kBACbF,YAFG,wBAAAI,EAAAI,SAAAT,uCAMeU,uFAAf,SAAAC,EAA8BV,GAA9B,IAAAW,EAAAC,EAAAC,EAAA,OAAAZ,EAAAC,QAAAC,KAAA,SAAAW,GAAA,eAAAA,EAAAT,KAAAS,EAAAR,MAAA,cAAAK,EACgCX,EAA7BY,aADH,IAAAD,EACW,EADXA,EACiBE,GADjB,EAAAE,EAAAb,SACgCF,GADhC,UAAAc,EAAAP,OAAA,UAEE,EAAAZ,EAAAO,SAAQ,kBACbc,OAAQ,OACRhB,QACEY,SAEFK,MAAI,EAAAC,EAAAhB,YACCW,GACHG,OAAQ,cATP,wBAAAF,EAAAN,SAAAE,uCAceS,uFAAf,SAAAC,EAA2BpB,GAA3B,IAAAqB,EAAAT,EAAAC,EAAA,OAAAZ,EAAAC,QAAAC,KAAA,SAAAmB,GAAA,eAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAe,EACgCrB,EAA7BY,aADH,IAAAS,EACW,EADXA,EACiBR,GADjB,EAAAE,EAAAb,SACgCF,GADhC,UAAAsB,EAAAf,OAAA,UAEE,EAAAZ,EAAAO,SAAQ,kBACbc,OAAQ,OACRhB,QACEY,SAEFK,MAAI,EAAAC,EAAAhB,YACCW,GACHG,OAAQ,YATP,wBAAAM,EAAAd,SAAAY,uCAceG,uFAAf,SAAAC,EAA8BxB,GAA9B,IAAAyB,EAAAb,EAAAC,EAAA,OAAAZ,EAAAC,QAAAC,KAAA,SAAAuB,GAAA,eAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAmB,EACgCzB,EAA7BY,aADH,IAAAa,EACW,EADXA,EACiBZ,GADjB,EAAAE,EAAAb,SACgCF,GADhC,UAAA0B,EAAAnB,OAAA,UAEE,EAAAZ,EAAAO,SAAQ,kBACbc,OAAQ,OACRhB,QACEY,SAEFK,MAAI,EAAAC,EAAAhB,YACCW,GACHG,OAAQ,cATP,wBAAAU,EAAAlB,SAAAgB,sLCvCPG,EAAA9B,EAAA,QA2BM+B,GACJC,UAAW,gBAEXC,OACEC,SAGFC,SACGC,MADMhC,EAAAC,QAAAgC,KAAA,SAAAD,EAAAE,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvC,EAAAC,QAAAC,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,OADV+B,EADFF,EACEE,QAAaC,EADfF,EACeE,KAAMC,EADrBH,EACqBG,IADrBnC,EAAAE,KAAA,EAEkBgC,EAAKX,EAAA7B,cAAeuC,GAFtC,OAGL,OADMG,EAFDpC,EAAAqC,KAAArC,EAAAE,KAAA,EAGCiC,GACJG,KAAM,YACNL,QAASM,MAAMC,QAAQJ,GAAYA,OALhC,wBAAApC,EAAAI,SAAAyB,KAQNY,YARM5C,EAAAC,QAAAgC,KAAA,SAAAW,EAAAC,EAAAC,GAAA,IAAAV,EAAAC,EAAAC,EAAAC,EAAA,OAAAvC,EAAAC,QAAAC,KAAA,SAAAW,GAAA,eAAAA,EAAAT,KAAAS,EAAAR,MAAA,OASY,OADJ+B,EARRS,EAQQT,QAAaC,EARrBS,EAQqBT,KAAMC,EAR3BQ,EAQ2BR,IAR3BzB,EAAAR,KAAA,EASkBgC,EAAKX,EAAA7B,cAAeuC,GATtC,OAUL,OADMG,EATD1B,EAAA2B,KAAA3B,EAAAR,KAAA,EAUCiC,GACJG,KAAM,aACNL,QAASM,MAAMC,QAAQJ,GAAYA,OAZhC,wBAAA1B,EAAAN,SAAAqC,KAeNG,OAfM/C,EAAAC,QAAAgC,KAAA,SAAAc,EAAAC,EAAAC,GAAA,IAAAb,EAAAC,EAAAC,EAAAY,EAAAX,EAAA,OAAAvC,EAAAC,QAAAC,KAAA,SAAAmB,GAAA,eAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAsBY,OAPT+B,EAfHY,EAeGZ,QAAaC,EAfhBY,EAegBZ,KAAMC,EAftBW,EAesBX,IAGzBY,EADEd,EAAQe,GACiC,IAAhCC,OAAOC,KAAKjB,GAASkB,OAAe5B,EAAAlB,eAAiBkB,EAAAJ,eAErDI,EAAAR,YApBRG,EAAAhB,KAAA,EAsBkBgC,EAAKa,EAAUd,GAtBjC,OAuBL,OADMG,EAtBDlB,EAAAmB,KAAAnB,EAAAhB,KAAA,EAuBCiC,GACJG,KAAM,YACNL,QAASG,IAzBN,wBAAAlB,EAAAd,SAAAwC,MA8BTQ,UACEC,UADQ,SACE3B,EAAO4B,GACf,SAAAxC,EAAAhB,YACK4B,GACHC,KAAM2B,EAAOrB,WAGjBsB,WAPQ,WAO+B,IAA5B7B,EAA4B8B,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,IAAlB7B,SAAY2B,EAAME,UAAAL,OAAA,EAAAK,UAAA,QAAAC,EACrC,SAAA3C,EAAAhB,YACK4B,GACHC,KAAMD,EAAMC,KAAK+B,OAAOJ,EAAOrB,gBAMxBT","file":"p__list__basic-list__model.ts.b09321f3.async.js","sourcesContent":["import request from '@/utils/request';\nimport { BasicListItemDataType } from './data.d';\n\ninterface ParamsType extends Partial<BasicListItemDataType> {\n  count?: number;\n}\n\nexport async function queryFakeList(params: ParamsType) {\n  return request('/api/fake_list', {\n    params,\n  });\n}\n\nexport async function removeFakeList(params: ParamsType) {\n  const { count = 5, ...restParams } = params;\n  return request('/api/fake_list', {\n    method: 'POST',\n    params: {\n      count,\n    },\n    data: {\n      ...restParams,\n      method: 'delete',\n    },\n  });\n}\n\nexport async function addFakeList(params: ParamsType) {\n  const { count = 5, ...restParams } = params;\n  return request('/api/fake_list', {\n    method: 'POST',\n    params: {\n      count,\n    },\n    data: {\n      ...restParams,\n      method: 'post',\n    },\n  });\n}\n\nexport async function updateFakeList(params: ParamsType) {\n  const { count = 5, ...restParams } = params;\n  return request('/api/fake_list', {\n    method: 'POST',\n    params: {\n      count,\n    },\n    data: {\n      ...restParams,\n      method: 'update',\n    },\n  });\n}\n","import { AnyAction, Reducer } from 'redux';\nimport { EffectsCommandMap } from 'dva';\nimport { addFakeList, queryFakeList, removeFakeList, updateFakeList } from './service';\n\nimport { BasicListItemDataType } from './data.d';\n\nexport interface StateType {\n  list: BasicListItemDataType[];\n}\n\nexport type Effect = (\n  action: AnyAction,\n  effects: EffectsCommandMap & { select: <T>(func: (state: StateType) => T) => T },\n) => void;\n\nexport interface ModelType {\n  namespace: string;\n  state: StateType;\n  effects: {\n    fetch: Effect;\n    appendFetch: Effect;\n    submit: Effect;\n  };\n  reducers: {\n    queryList: Reducer<StateType>;\n    appendList: Reducer<StateType>;\n  };\n}\n\nconst Model: ModelType = {\n  namespace: 'listBasicList',\n\n  state: {\n    list: [],\n  },\n\n  effects: {\n    *fetch({ payload }, { call, put }) {\n      const response = yield call(queryFakeList, payload);\n      yield put({\n        type: 'queryList',\n        payload: Array.isArray(response) ? response : [],\n      });\n    },\n    *appendFetch({ payload }, { call, put }) {\n      const response = yield call(queryFakeList, payload);\n      yield put({\n        type: 'appendList',\n        payload: Array.isArray(response) ? response : [],\n      });\n    },\n    *submit({ payload }, { call, put }) {\n      let callback;\n      if (payload.id) {\n        callback = Object.keys(payload).length === 1 ? removeFakeList : updateFakeList;\n      } else {\n        callback = addFakeList;\n      }\n      const response = yield call(callback, payload); // post\n      yield put({\n        type: 'queryList',\n        payload: response,\n      });\n    },\n  },\n\n  reducers: {\n    queryList(state, action) {\n      return {\n        ...state,\n        list: action.payload,\n      };\n    },\n    appendList(state = { list: [] }, action) {\n      return {\n        ...state,\n        list: state.list.concat(action.payload),\n      };\n    },\n  },\n};\n\nexport default Model;\n"],"sourceRoot":""}