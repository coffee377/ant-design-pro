{"version":3,"sources":["src/pages/dashboard/analysis/components/SalesCard.tsx"],"names":["_locale","__webpack_require__","_react","_interopRequireDefault","_numeral","_Charts","_style6","RangePicker","TabPane","rankingListData","i","push","title","formatMessage","id","no","total","SalesCard","_ref","rangePickerValue","salesData","isActive","handleRangePickerChange","loading","selectDate","default","createElement","_card","bordered","bodyStyle","padding","className","salesCard","_tabs","tabBarExtraContent","salesExtraWrap","salesExtra","onClick","FormattedMessage","defaultMessage","value","onChange","style","width","size","tabBarStyle","marginBottom","tab","key","_row","type","_col","xl","lg","md","sm","xs","salesBar","Bar","height","data","salesRank","rankingTitle","rankingList","map","item","concat","rankingItemNumber","active","rankingItemTitle","rankingItemValue","format"],"mappings":"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","file":"32.17897fa9.async.js","sourcesContent":["import { Card, Col, DatePicker, Row, Tabs } from 'antd';\nimport { FormattedMessage, formatMessage } from 'umi-plugin-react/locale';\n\nimport { RangePickerValue } from 'antd/es/date-picker/interface';\nimport React from 'react';\nimport numeral from 'numeral';\nimport { VisitDataType } from '../data.d';\nimport { Bar } from './Charts';\nimport styles from '../style.less';\n\nconst { RangePicker } = DatePicker;\nconst { TabPane } = Tabs;\n\nconst rankingListData: { title: string; total: number }[] = [];\nfor (let i = 0; i < 7; i += 1) {\n  rankingListData.push({\n    title: formatMessage({ id: 'dashboard-analysis.analysis.test' }, { no: i }),\n    total: 323234,\n  });\n}\n\nconst SalesCard = ({\n  rangePickerValue,\n  salesData,\n  isActive,\n  handleRangePickerChange,\n  loading,\n  selectDate,\n}: {\n  rangePickerValue: RangePickerValue;\n  isActive: (key: 'today' | 'week' | 'month' | 'year') => string;\n  salesData: VisitDataType[];\n  loading: boolean;\n  handleRangePickerChange: (dates: RangePickerValue, dateStrings: [string, string]) => void;\n  selectDate: (key: 'today' | 'week' | 'month' | 'year') => void;\n}) => (\n  <Card loading={loading} bordered={false} bodyStyle={{ padding: 0 }}>\n    <div className={styles.salesCard}>\n      <Tabs\n        tabBarExtraContent={\n          <div className={styles.salesExtraWrap}>\n            <div className={styles.salesExtra}>\n              <a className={isActive('today')} onClick={() => selectDate('today')}>\n                <FormattedMessage id=\"dashboard-analysis.analysis.all-day\" defaultMessage=\"All Day\" />\n              </a>\n              <a className={isActive('week')} onClick={() => selectDate('week')}>\n                <FormattedMessage id=\"dashboard-analysis.analysis.all-week\" defaultMessage=\"All Week\" />\n              </a>\n              <a className={isActive('month')} onClick={() => selectDate('month')}>\n                <FormattedMessage id=\"dashboard-analysis.analysis.all-month\" defaultMessage=\"All Month\" />\n              </a>\n              <a className={isActive('year')} onClick={() => selectDate('year')}>\n                <FormattedMessage id=\"dashboard-analysis.analysis.all-year\" defaultMessage=\"All Year\" />\n              </a>\n            </div>\n            <RangePicker\n              value={rangePickerValue}\n              onChange={handleRangePickerChange}\n              style={{ width: 256 }}\n            />\n          </div>\n        }\n        size=\"large\"\n        tabBarStyle={{ marginBottom: 24 }}\n      >\n        <TabPane\n          tab={<FormattedMessage id=\"dashboard-analysis.analysis.sales\" defaultMessage=\"Sales\" />}\n          key=\"sales\"\n        >\n          <Row type=\"flex\">\n            <Col xl={16} lg={12} md={12} sm={24} xs={24}>\n              <div className={styles.salesBar}>\n                <Bar\n                  height={295}\n                  title={\n                    <FormattedMessage\n                      id=\"dashboard-analysis.analysis.sales-trend\"\n                      defaultMessage=\"Sales Trend\"\n                    />\n                  }\n                  data={salesData}\n                />\n              </div>\n            </Col>\n            <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n              <div className={styles.salesRank}>\n                <h4 className={styles.rankingTitle}>\n                  <FormattedMessage\n                    id=\"dashboard-analysis.analysis.sales-ranking\"\n                    defaultMessage=\"Sales Ranking\"\n                  />\n                </h4>\n                <ul className={styles.rankingList}>\n                  {rankingListData.map((item, i) => (\n                    <li key={item.title}>\n                      <span className={`${styles.rankingItemNumber} ${i < 3 ? styles.active : ''}`}>\n                        {i + 1}\n                      </span>\n                      <span className={styles.rankingItemTitle} title={item.title}>\n                        {item.title}\n                      </span>\n                      <span className={styles.rankingItemValue}>\n                        {numeral(item.total).format('0,0')}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane\n          tab={<FormattedMessage id=\"dashboard-analysis.analysis.visits\" defaultMessage=\"Visits\" />}\n          key=\"views\"\n        >\n          <Row>\n            <Col xl={16} lg={12} md={12} sm={24} xs={24}>\n              <div className={styles.salesBar}>\n                <Bar\n                  height={292}\n                  title={\n                    <FormattedMessage\n                      id=\"dashboard-analysis.analysis.visits-trend\"\n                      defaultMessage=\"Visits Trend\"\n                    />\n                  }\n                  data={salesData}\n                />\n              </div>\n            </Col>\n            <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n              <div className={styles.salesRank}>\n                <h4 className={styles.rankingTitle}>\n                  <FormattedMessage\n                    id=\"dashboard-analysis.analysis.visits-ranking\"\n                    defaultMessage=\"Visits Ranking\"\n                  />\n                </h4>\n                <ul className={styles.rankingList}>\n                  {rankingListData.map((item, i) => (\n                    <li key={item.title}>\n                      <span className={`${styles.rankingItemNumber} ${i < 3 ? styles.active : ''}`}>\n                        {i + 1}\n                      </span>\n                      <span className={styles.rankingItemTitle} title={item.title}>\n                        {item.title}\n                      </span>\n                      <span>{numeral(item.total).format('0,0')}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </Col>\n          </Row>\n        </TabPane>\n      </Tabs>\n    </div>\n  </Card>\n);\n\nexport default SalesCard;\n"],"sourceRoot":""}