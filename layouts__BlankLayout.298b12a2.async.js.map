{"version":3,"sources":["src/layouts/BlankLayout.tsx","src/components/CopyBlock/index.tsx","webpack:///./src/components/CopyBlock/index.less?cdc9"],"names":["_react","_interopRequireDefault","__webpack_require__","_CopyBlock","Layout","_ref","children","default","createElement","Fragment","id","Date","now","_interopRequireWildcard","_locale","_dva","_utils","_index","firstUpperCase","pathString","replace","split","map","s","toLowerCase","L","toUpperCase","filter","join","onBlockCopy","label","isAntDesignPro","ga","window","eventCategory","eventAction","eventLabel","BlockCodeView","url","blockUrl","concat","className","_typography","Paragraph","copyable","text","onCopy","style","display","connect","_ref2","routing","location","_ref3","pathname","divDom","useRef","_popover","title","FormattedMessage","defaultMessage","placement","content","trigger","getPopupContainer","dom","current","ref","_icon","type","module","exports","copy-block","copy-block-view","copy-block-code"],"mappings":"mLAAA,IAAAA,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,SAEME,EAAmB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACvBN,EAAAO,QAAAC,cAAAR,EAAAO,QAAAE,SAAA,KACET,EAAAO,QAAAC,cAAA,WAAMF,GACNN,EAAAO,QAAAC,cAACL,EAAAI,SAAUG,GAAIC,KAAKC,YAITR,sOCTfJ,EAAAa,EAAAX,EAAA,SAEAY,EAAAZ,EAAA,QACAa,EAAAb,EAAA,QACAc,EAAAd,EAAA,QACAe,EAAAhB,EAAAC,EAAA,SAEMgB,EAAiB,SAACC,GAAD,OACrBA,EACGC,QAAQ,IAAK,IACbC,MAAM,QACNC,IAAI,SAACC,GAAD,OAAeA,EAAEC,cAAcJ,QAAQ,cAAe,SAAAK,GAAC,OAAIA,EAAEC,kBACjEC,OAAO,SAACJ,GAAD,QAAkBA,IACzBK,KAAK,KAGJC,EAAc,SAACC,GACnB,IAAK,EAAAd,EAAAe,kBAAL,CAIA,IAAMC,EAAKC,QAAUA,OAAOD,GACxBA,GACFA,EAAG,OAAQ,SACTE,cAAe,QACfC,YAAa,OACbC,WAAYN,MAKZO,EAED,SAAAhC,GAAY,IAATiC,EAASjC,EAATiC,IACAC,EAAQ,qBAAAC,OAAwBtB,EAAeoB,GAAvC,YAAAE,OAAsDF,GACpE,OACEtC,EAAAO,QAAAC,cAAA,OAAKiC,UAAWxB,EAAAV,QAAO,oBACrBP,EAAAO,QAAAC,cAACkC,EAAAnC,QAAWoC,WACVC,UACEC,KAAMN,EACNO,OAAQ,kBAAMjB,EAAYS,KAE5BS,OACEC,QAAS,SAGXhD,EAAAO,QAAAC,cAAA,WACER,EAAAO,QAAAC,cAAA,QAAMiC,UAAWxB,EAAAV,QAAO,oBAAqBgC,UAaxC,EAAAxB,EAAAkC,SAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OACrBC,SAAUD,EAAQC,WADL,CAEX,SAAAC,GAA8B,IAA3BD,EAA2BC,EAA3BD,SACCd,EAAMc,EAASE,SACfC,GAAS,EAAAvD,EAAAwD,QAAuB,MACtC,OACExD,EAAAO,QAAAC,cAAAiD,EAAAlD,SACEmD,MAAO1D,EAAAO,QAAAC,cAACM,EAAA6C,kBAAiBjD,GAAG,yBAAyBkD,eAAe,iEACpEC,UAAU,UACVC,QAAS9D,EAAAO,QAAAC,cAAC6B,GAAcC,IAAKA,IAC7ByB,QAAQ,QACRC,kBAAmB,SAAAC,GAAG,OAAKV,EAAOW,QAAUX,EAAOW,QAAUD,IAE7DjE,EAAAO,QAAAC,cAAA,OAAKiC,UAAWxB,EAAAV,QAAO,cAAe4D,IAAKZ,GACzCvD,EAAAO,QAAAC,cAAA4D,EAAA7D,SAAM8D,KAAK,mDC1EnBC,EAAAC,SAAkBC,aAAA,kDAAAC,kBAAA,uDAAAC,kBAAA","file":"layouts__BlankLayout.298b12a2.async.js","sourcesContent":["import React from 'react';\nimport CopyBlock from '@/components/CopyBlock';\n\nconst Layout: React.FC = ({ children }) => (\n  <>\n    <div>{children}</div>\n    <CopyBlock id={Date.now()} />\n  </>\n);\n\nexport default Layout;\n","import { Icon, Popover, Typography } from 'antd';\nimport React, { useRef } from 'react';\n\nimport { FormattedMessage } from 'umi-plugin-react/locale';\nimport { connect } from 'dva';\nimport { isAntDesignPro } from '@/utils/utils';\nimport styles from './index.less';\n\nconst firstUpperCase = (pathString: string): string =>\n  pathString\n    .replace('.', '')\n    .split(/\\/|-/)\n    .map((s): string => s.toLowerCase().replace(/( |^)[a-z]/g, L => L.toUpperCase()))\n    .filter((s): boolean => !!s)\n    .join('');\n\n// when  click block copy, send block url to  ga\nconst onBlockCopy = (label: string) => {\n  if (!isAntDesignPro()) {\n    return;\n  }\n\n  const ga = window && window.ga;\n  if (ga) {\n    ga('send', 'event', {\n      eventCategory: 'block',\n      eventAction: 'copy',\n      eventLabel: label,\n    });\n  }\n};\n\nconst BlockCodeView: React.SFC<{\n  url: string;\n}> = ({ url }) => {\n  const blockUrl = `npx umi block add ${firstUpperCase(url)} --path=${url}`;\n  return (\n    <div className={styles['copy-block-view']}>\n      <Typography.Paragraph\n        copyable={{\n          text: blockUrl,\n          onCopy: () => onBlockCopy(url),\n        }}\n        style={{\n          display: 'flex',\n        }}\n      >\n        <pre>\n          <code className={styles['copy-block-code']}>{blockUrl}</code>\n        </pre>\n      </Typography.Paragraph>\n    </div>\n  );\n};\n\ninterface RoutingType {\n  location: {\n    pathname: string;\n  };\n}\n\nexport default connect(({ routing }: { routing: RoutingType }) => ({\n  location: routing.location,\n}))(({ location }: RoutingType) => {\n  const url = location.pathname;\n  const divDom = useRef<HTMLDivElement>(null);\n  return (\n    <Popover\n      title={<FormattedMessage id=\"app.preview.down.block\" defaultMessage=\"下载此页面到本地项目\" />}\n      placement=\"topLeft\"\n      content={<BlockCodeView url={url} />}\n      trigger=\"click\"\n      getPopupContainer={dom => (divDom.current ? divDom.current : dom)}\n    >\n      <div className={styles['copy-block']} ref={divDom}>\n        <Icon type=\"download\" />\n      </div>\n    </Popover>\n  );\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copy-block\":\"antd-pro-components-copy-block-index-copy-block\",\"copy-block-view\":\"antd-pro-components-copy-block-index-copy-block-view\",\"copy-block-code\":\"antd-pro-components-copy-block-index-copy-block-code\"};"],"sourceRoot":""}