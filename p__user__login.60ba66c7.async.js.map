{"version":3,"sources":["webpack:///./src/pages/user/login/components/Login/index.less?00a9","src/pages/user/login/index.tsx","src/pages/user/login/components/Login/map.tsx","src/pages/user/login/components/Login/LoginSubmit.tsx","src/pages/user/login/components/Login/index.tsx","src/pages/user/login/components/Login/LoginTab.tsx","src/pages/user/login/components/Login/LoginItem.tsx","src/pages/user/login/components/Login/LoginContext.tsx","webpack:///./src/pages/user/login/style.less?1dac"],"names":["module","exports","login","getCaptcha","icon","other","register","prefixIcon","submit","_locale","__webpack_require__","_react","_interopRequireWildcard","_link","_interopRequireDefault","_dva","_Login","_style4","Tab","default","UserName","Password","Mobile","Captcha","Submit","Login","_Component","_this","_classCallCheck2","this","loginForm","undefined","state","type","autoLogin","changeAutoLogin","e","setState","target","checked","handleSubmit","err","values","dispatch","props","payload","_objectSpread2","onTabChange","onGetCaptcha","Promise","resolve","reject","validateFields","mobile","then","catch","renderMessage","content","createElement","_alert","style","marginBottom","message","showIcon","_inherits2","_createClass2","key","value","_this2","_this$props","userLogin","submitting","status","loginType","_this$state","className","main","defaultActiveKey","onSubmit","ref","form","tab","formatMessage","id","name","placeholder","concat","rules","required","onPressEnter","preventDefault","pattern","countDown","getCaptchaButtonText","getCaptchaSecondText","_checkbox","onChange","FormattedMessage","float","href","loading","_icon","theme","to","Component","__decorate","connect","_ref","effects","_index","size","prefix","_classnames","FormItem","_form","Item","LoginSubmit","rest","_objectWithoutProperties2","clsString","_button","Object","assign","htmlType","_LoginContext","_LoginItem","_LoginSubmit","_LoginTab","_possibleConstructorReturn2","_getPrototypeOf2","call","onSwitch","getContext","_this$state$tabs","tabs","tabUtil","addTab","_toConsumableArray2","removeTab","filter","currentId","updateActive","activeItem","_this$state$type","_this$state$active","active","push","_this$state2","_this$state2$active","_this$state2$type","activeFields","force","_this$props2","children","_this$state3","_this$state3$tabs","TabChildren","otherChildren","Children","forEach","child","typeName","Provider","length","Fragment","_tabs","animated","activeKey","defaultProps","keys","item","create","TabPane","generateId","i","arguments","LoginTab","uniqueId","WrapContext","Consumer","_omit","_map","WrapFormItem","interval","result","runGetCaptchaCountDown","getFormItemOptions","defaultValue","_ref$customProps","customProps","options","initialValue","count","window","setInterval","clearInterval","_this$props$name","restProps","getFieldDecorator","otherProps","inputProps","_row","gutter","_col","span","_input","disabled","onClick","LoginItem","context","LoginContext","createContext"],"mappings":"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","file":"p__user__login.60ba66c7.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"antd-pro-pages-user-login-components-login-index-login\",\"getCaptcha\":\"antd-pro-pages-user-login-components-login-index-getCaptcha\",\"icon\":\"antd-pro-pages-user-login-components-login-index-icon\",\"other\":\"antd-pro-pages-user-login-components-login-index-other\",\"register\":\"antd-pro-pages-user-login-components-login-index-register\",\"prefixIcon\":\"antd-pro-pages-user-login-components-login-index-prefixIcon\",\"submit\":\"antd-pro-pages-user-login-components-login-index-submit\"};","import { Alert, Checkbox, Icon } from 'antd';\nimport { FormattedMessage, formatMessage } from 'umi-plugin-react/locale';\nimport React, { Component } from 'react';\n\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\nimport { Dispatch } from 'redux';\nimport { FormComponentProps } from 'antd/es/form';\nimport Link from 'umi/link';\nimport { connect } from 'dva';\nimport { StateType } from './model';\nimport LoginComponents from './components/Login';\nimport styles from './style.less';\n\nconst { Tab, UserName, Password, Mobile, Captcha, Submit } = LoginComponents;\n\ninterface LoginProps {\n  dispatch: Dispatch<any>;\n  userLogin: StateType;\n  submitting: boolean;\n}\ninterface LoginState {\n  type: string;\n  autoLogin: boolean;\n}\nexport interface FormDataType {\n  userName: string;\n  password: string;\n  mobile: string;\n  captcha: string;\n}\n\n@connect(\n  ({\n    userLogin,\n    loading,\n  }: {\n    userLogin: StateType;\n    loading: {\n      effects: {\n        [key: string]: string;\n      };\n    };\n  }) => ({\n    userLogin,\n    submitting: loading.effects['userLogin/login'],\n  }),\n)\nclass Login extends Component<\n  LoginProps,\n  LoginState\n> {\n  loginForm: FormComponentProps['form'] | undefined | null = undefined;\n\n  state: LoginState = {\n    type: 'account',\n    autoLogin: true,\n  };\n\n  changeAutoLogin = (e: CheckboxChangeEvent) => {\n    this.setState({\n      autoLogin: e.target.checked,\n    });\n  };\n\n  handleSubmit = (err: any, values: FormDataType) => {\n    const { type } = this.state;\n    if (!err) {\n      const { dispatch } = this.props;\n      dispatch({\n        type: 'userLogin/login',\n        payload: {\n          ...values,\n          type,\n        },\n      });\n    }\n  };\n\n  onTabChange = (type: string) => {\n    this.setState({ type });\n  };\n\n  onGetCaptcha = () =>\n    new Promise((resolve, reject) => {\n      if (!this.loginForm) {\n        return;\n      }\n      this.loginForm.validateFields(['mobile'], {}, (err: any, values: FormDataType) => {\n        if (err) {\n          reject(err);\n        } else {\n          const { dispatch } = this.props;\n          ((dispatch({\n            type: 'userLogin/getCaptcha',\n            payload: values.mobile,\n          }) as unknown) as Promise<any>)\n            .then(resolve)\n            .catch(reject);\n        }\n      });\n    });\n\n  renderMessage = (content: string) => (\n    <Alert style={{ marginBottom: 24 }} message={content} type=\"error\" showIcon />\n  );\n\n  render() {\n    const { userLogin, submitting } = this.props;\n    const { status, type: loginType } = userLogin;\n    const { type, autoLogin } = this.state;\n    return (\n      <div className={styles.main}>\n        <LoginComponents\n          defaultActiveKey={type}\n          onTabChange={this.onTabChange}\n          onSubmit={this.handleSubmit}\n          ref={(form: any) => {\n            this.loginForm = form;\n          }}\n        >\n          <Tab key=\"account\" tab={formatMessage({ id: 'user-login.login.tab-login-credentials' })}>\n            {status === 'error' &&\n              loginType === 'account' &&\n              !submitting &&\n              this.renderMessage(\n                formatMessage({ id: 'user-login.login.message-invalid-credentials' }),\n              )}\n            <UserName\n              name=\"userName\"\n              placeholder={`${formatMessage({ id: 'user-login.login.userName' })}: admin or user`}\n              rules={[\n                {\n                  required: true,\n                  message: formatMessage({ id: 'user-login.userName.required' }),\n                },\n              ]}\n            />\n            <Password\n              name=\"password\"\n              placeholder={`${formatMessage({ id: 'user-login.login.password' })}: ant.design`}\n              rules={[\n                {\n                  required: true,\n                  message: formatMessage({ id: 'user-login.password.required' }),\n                },\n              ]}\n              onPressEnter={e => {\n                e.preventDefault();\n                this.loginForm.validateFields(this.handleSubmit);\n              }}\n            />\n          </Tab>\n          <Tab key=\"mobile\" tab={formatMessage({ id: 'user-login.login.tab-login-mobile' })}>\n            {status === 'error' &&\n              loginType === 'mobile' &&\n              !submitting &&\n              this.renderMessage(\n                formatMessage({ id: 'user-login.login.message-invalid-verification-code' }),\n              )}\n            <Mobile\n              name=\"mobile\"\n              placeholder={formatMessage({ id: 'user-login.phone-number.placeholder' })}\n              rules={[\n                {\n                  required: true,\n                  message: formatMessage({ id: 'user-login.phone-number.required' }),\n                },\n                {\n                  pattern: /^1\\d{10}$/,\n                  message: formatMessage({ id: 'user-login.phone-number.wrong-format' }),\n                },\n              ]}\n            />\n            <Captcha\n              name=\"captcha\"\n              placeholder={formatMessage({ id: 'user-login.verification-code.placeholder' })}\n              countDown={120}\n              onGetCaptcha={this.onGetCaptcha}\n              getCaptchaButtonText={formatMessage({ id: 'user-login.form.get-captcha' })}\n              getCaptchaSecondText={formatMessage({ id: 'user-login.captcha.second' })}\n              rules={[\n                {\n                  required: true,\n                  message: formatMessage({ id: 'user-login.verification-code.required' }),\n                },\n              ]}\n            />\n          </Tab>\n          <div>\n            <Checkbox checked={autoLogin} onChange={this.changeAutoLogin}>\n              <FormattedMessage id=\"user-login.login.remember-me\" />\n            </Checkbox>\n            <a style={{ float: 'right' }} href=\"\">\n              <FormattedMessage id=\"user-login.login.forgot-password\" />\n            </a>\n          </div>\n          <Submit loading={submitting}>\n            <FormattedMessage id=\"user-login.login.login\" />\n          </Submit>\n          <div className={styles.other}>\n            <FormattedMessage id=\"user-login.login.sign-in-with\" />\n            <Icon type=\"alipay-circle\" className={styles.icon} theme=\"outlined\" />\n            <Icon type=\"taobao-circle\" className={styles.icon} theme=\"outlined\" />\n            <Icon type=\"weibo-circle\" className={styles.icon} theme=\"outlined\" />\n            <Link className={styles.register} to=\"/user/register\">\n              <FormattedMessage id=\"user-login.login.signup\" />\n            </Link>\n          </div>\n        </LoginComponents>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import { Icon } from 'antd';\nimport React from 'react';\nimport styles from './index.less';\n\nexport default {\n  UserName: {\n    props: {\n      size: 'large',\n      id: 'userName',\n      prefix: <Icon type=\"user\" className={styles.prefixIcon} />,\n      placeholder: 'admin',\n    },\n    rules: [\n      {\n        required: true,\n        message: 'Please enter username!',\n      },\n    ],\n  },\n  Password: {\n    props: {\n      size: 'large',\n      prefix: <Icon type=\"lock\" className={styles.prefixIcon} />,\n      type: 'password',\n      id: 'password',\n      placeholder: '888888',\n    },\n    rules: [\n      {\n        required: true,\n        message: 'Please enter password!',\n      },\n    ],\n  },\n  Mobile: {\n    props: {\n      size: 'large',\n      prefix: <Icon type=\"mobile\" className={styles.prefixIcon} />,\n      placeholder: 'mobile number',\n    },\n    rules: [\n      {\n        required: true,\n        message: 'Please enter mobile number!',\n      },\n      {\n        pattern: /^1\\d{10}$/,\n        message: 'Wrong mobile number format!',\n      },\n    ],\n  },\n  Captcha: {\n    props: {\n      size: 'large',\n      prefix: <Icon type=\"mail\" className={styles.prefixIcon} />,\n      placeholder: 'captcha',\n    },\n    rules: [\n      {\n        required: true,\n        message: 'Please enter Captcha!',\n      },\n    ],\n  },\n};\n","import { Button, Form } from 'antd';\n\nimport { ButtonProps } from 'antd/es/button';\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.less';\n\nconst FormItem = Form.Item;\n\ninterface LoginSubmitProps extends ButtonProps {\n  className?: string;\n}\n\nconst LoginSubmit: React.FC<LoginSubmitProps> = ({ className, ...rest }) => {\n  const clsString = classNames(styles.submit, className);\n  return (\n    <FormItem>\n      <Button size=\"large\" className={clsString} type=\"primary\" htmlType=\"submit\" {...rest} />\n    </FormItem>\n  );\n};\n\nexport default LoginSubmit;\n","import { Form, Tabs } from 'antd';\nimport React, { Component } from 'react';\nimport { FormComponentProps } from 'antd/es/form';\nimport classNames from 'classnames';\nimport LoginContext, { LoginContextProps } from './LoginContext';\nimport LoginItem, { LoginItemProps } from './LoginItem';\n\nimport LoginSubmit from './LoginSubmit';\nimport LoginTab from './LoginTab';\nimport styles from './index.less';\n\nexport interface LoginProps {\n  defaultActiveKey?: string;\n  onTabChange?: (key: string) => void;\n  style?: React.CSSProperties;\n  onSubmit?: (error: any, values: any) => void;\n  className?: string;\n  form: FormComponentProps['form'];\n  children: React.ReactElement<LoginTab>[];\n}\n\ninterface LoginState {\n  tabs?: string[];\n  type?: string;\n  active?: { [key: string]: any[] };\n}\n\nclass Login extends Component<LoginProps, LoginState> {\n  public static Tab = LoginTab;\n\n  public static Submit = LoginSubmit;\n\n  public static UserName: React.FunctionComponent<LoginItemProps>;\n\n  public static Password: React.FunctionComponent<LoginItemProps>;\n\n  public static Mobile: React.FunctionComponent<LoginItemProps>;\n\n  public static Captcha: React.FunctionComponent<LoginItemProps>;\n\n  static defaultProps = {\n    className: '',\n    defaultActiveKey: '',\n    onTabChange: () => {},\n    onSubmit: () => {},\n  };\n\n  constructor(props: LoginProps) {\n    super(props);\n    this.state = {\n      type: props.defaultActiveKey,\n      tabs: [],\n      active: {},\n    };\n  }\n\n  onSwitch = (type: string) => {\n    this.setState(\n      {\n        type,\n      },\n      () => {\n        const { onTabChange } = this.props;\n        if (onTabChange) {\n          onTabChange(type);\n        }\n      },\n    );\n  };\n\n  getContext: () => LoginContextProps = () => {\n    const { form } = this.props;\n    const { tabs = [] } = this.state;\n    return {\n      tabUtil: {\n        addTab: id => {\n          this.setState({\n            tabs: [...tabs, id],\n          });\n        },\n        removeTab: id => {\n          this.setState({\n            tabs: tabs.filter(currentId => currentId !== id),\n          });\n        },\n      },\n      form: { ...form },\n      updateActive: activeItem => {\n        const { type = '', active = {} } = this.state;\n        if (active[type]) {\n          active[type].push(activeItem);\n        } else {\n          active[type] = [activeItem];\n        }\n        this.setState({\n          active,\n        });\n      },\n    };\n  };\n\n  handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { active = {}, type = '' } = this.state;\n    const { form, onSubmit } = this.props;\n    const activeFields = active[type] || [];\n    if (form) {\n      form.validateFields(activeFields, { force: true }, (err, values) => {\n        if (onSubmit) {\n          onSubmit(err, values);\n        }\n      });\n    }\n  };\n\n  render() {\n    const { className, children } = this.props;\n    const { type, tabs = [] } = this.state;\n    const TabChildren: React.ReactComponentElement<LoginTab>[] = [];\n    const otherChildren: React.ReactElement<any>[] = [];\n    React.Children.forEach(\n      children,\n      (child: React.ReactComponentElement<LoginTab> | React.ReactElement<any>) => {\n        if (!child) {\n          return;\n        }\n        if (child.type.typeName === 'LoginTab') {\n          TabChildren.push(child);\n        } else {\n          otherChildren.push(child);\n        }\n      },\n    );\n    return (\n      <LoginContext.Provider value={this.getContext()}>\n        <div className={classNames(className, styles.login)}>\n          <Form onSubmit={this.handleSubmit}>\n            {tabs.length ? (\n              <React.Fragment>\n                <Tabs\n                  animated={false}\n                  className={styles.tabs}\n                  activeKey={type}\n                  onChange={this.onSwitch}\n                >\n                  {TabChildren}\n                </Tabs>\n                {otherChildren}\n              </React.Fragment>\n            ) : (\n              children\n            )}\n          </Form>\n        </div>\n      </LoginContext.Provider>\n    );\n  }\n}\n\n(Object.keys(LoginItem) as (keyof LoginItemType)[]).forEach(item => {\n  Login[item] = LoginItem[item];\n});\n\nexport default Form.create<LoginProps>()(Login);\n","import React, { Component } from 'react';\n\nimport { TabPaneProps } from 'antd/es/tabs';\nimport { Tabs } from 'antd';\nimport LoginContext, { LoginContextProps } from './LoginContext';\n\nconst { TabPane } = Tabs;\n\nconst generateId = (() => {\n  let i = 0;\n  return (prefix = '') => {\n    i += 1;\n    return `${prefix}${i}`;\n  };\n})();\n\ninterface LoginTabProps extends TabPaneProps {\n  tabUtil: LoginContextProps['tabUtil'];\n}\n\nclass LoginTab extends Component<LoginTabProps> {\n  uniqueId: string = '';\n\n  constructor(props: LoginTabProps) {\n    super(props);\n    this.uniqueId = generateId('login-tab-');\n  }\n\n  componentDidMount() {\n    const { tabUtil } = this.props;\n    if (tabUtil) {\n      tabUtil.addTab(this.uniqueId);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return <TabPane {...this.props}>{children}</TabPane>;\n  }\n}\n\nconst WrapContext: React.FC<TabPaneProps> & {\n  typeName: string;\n} = props => (\n  <LoginContext.Consumer>\n    {value => <LoginTab tabUtil={value.tabUtil} {...props} />}\n  </LoginContext.Consumer>\n);\n\n// 标志位 用来判断是不是自定义组件\nWrapContext.typeName = 'LoginTab';\n\nexport default WrapContext;\n","import { Button, Col, Form, Input, Row } from 'antd';\nimport React, { Component } from 'react';\n\nimport { FormComponentProps } from 'antd/es/form';\nimport omit from 'omit.js';\nimport ItemMap from './map';\nimport LoginContext, { LoginContextProps } from './LoginContext';\nimport styles from './index.less';\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport type WrappedLoginItemProps = Omit<LoginItemProps, 'form' | 'type' | 'updateActive'>;\nexport type LoginItemKeyType = keyof typeof ItemMap;\nexport interface LoginItemType {\n  UserName: React.FC<WrappedLoginItemProps>;\n  Password: React.FC<WrappedLoginItemProps>;\n  Mobile: React.FC<WrappedLoginItemProps>;\n  Captcha: React.FC<WrappedLoginItemProps>;\n}\n\nexport interface LoginItemProps {\n  name?: string;\n  rules?: any[];\n  style?: React.CSSProperties;\n  onGetCaptcha?: (event?: MouseEvent) => void | Promise<any> | false;\n  placeholder?: string;\n  buttonText?: React.ReactNode;\n  onPressEnter?: (e: any) => void;\n  countDown?: number;\n  getCaptchaButtonText?: string;\n  getCaptchaSecondText?: string;\n  updateActive?: LoginContextProps['updateActive'];\n  type?: string;\n  defaultValue?: string;\n  form?: FormComponentProps['form'];\n  customProps?: { [key: string]: any };\n  onChange?: (e: any) => void;\n  tabUtil?: any;\n}\n\ninterface LoginItemState {\n  count: number;\n}\n\nconst FormItem = Form.Item;\n\nclass WrapFormItem extends Component<LoginItemProps, LoginItemState> {\n  static defaultProps = {\n    getCaptchaButtonText: 'captcha',\n    getCaptchaSecondText: 'second',\n  };\n\n  interval: number | undefined = undefined;\n\n  constructor(props: LoginItemProps) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { updateActive, name = '' } = this.props;\n    if (updateActive) {\n      updateActive(name);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onGetCaptcha = () => {\n    const { onGetCaptcha } = this.props;\n    const result = onGetCaptcha ? onGetCaptcha() : null;\n    if (result === false) {\n      return;\n    }\n    if (result instanceof Promise) {\n      result.then(this.runGetCaptchaCountDown);\n    } else {\n      this.runGetCaptchaCountDown();\n    }\n  };\n\n  getFormItemOptions = ({ onChange, defaultValue, customProps = {}, rules }: LoginItemProps) => {\n    const options: {\n      rules?: any[];\n      onChange?: LoginItemProps['onChange'];\n      initialValue?: LoginItemProps['defaultValue'];\n    } = {\n      rules: rules || customProps.rules,\n    };\n    if (onChange) {\n      options.onChange = onChange;\n    }\n    if (defaultValue) {\n      options.initialValue = defaultValue;\n    }\n    return options;\n  };\n\n  runGetCaptchaCountDown = () => {\n    const { countDown } = this.props;\n    let count = countDown || 59;\n    this.setState({ count });\n    this.interval = window.setInterval(() => {\n      count -= 1;\n      this.setState({ count });\n      if (count === 0) {\n        clearInterval(this.interval);\n      }\n    }, 1000);\n  };\n\n  render() {\n    const { count } = this.state;\n\n    // 这么写是为了防止restProps中 带入 onChange, defaultValue, rules props tabUtil\n    const {\n      onChange,\n      customProps,\n      defaultValue,\n      rules,\n      name,\n      getCaptchaButtonText,\n      getCaptchaSecondText,\n      updateActive,\n      type,\n      form,\n      tabUtil,\n      ...restProps\n    } = this.props;\n    if (!name) {\n      return null;\n    }\n    if (!form) {\n      return null;\n    }\n    const { getFieldDecorator } = form;\n    // get getFieldDecorator props\n    const options = this.getFormItemOptions(this.props);\n    const otherProps = restProps || {};\n\n    if (type === 'Captcha') {\n      const inputProps = omit(otherProps, ['onGetCaptcha', 'countDown']);\n\n      return (\n        <FormItem>\n          <Row gutter={8}>\n            <Col span={16}>\n              {getFieldDecorator(name, options)(<Input {...customProps} {...inputProps} />)}\n            </Col>\n            <Col span={8}>\n              <Button\n                disabled={!!count}\n                className={styles.getCaptcha}\n                size=\"large\"\n                onClick={this.onGetCaptcha}\n              >\n                {count ? `${count} ${getCaptchaSecondText}` : getCaptchaButtonText}\n              </Button>\n            </Col>\n          </Row>\n        </FormItem>\n      );\n    }\n    return (\n      <FormItem>\n        {getFieldDecorator(name, options)(<Input {...customProps} {...otherProps} />)}\n      </FormItem>\n    );\n  }\n}\n\nconst LoginItem: Partial<LoginItemType> = {};\n\nObject.keys(ItemMap).forEach(key => {\n  const item = ItemMap[key];\n  LoginItem[key] = (props: LoginItemProps) => (\n    <LoginContext.Consumer>\n      {context => (\n        <WrapFormItem\n          customProps={item.props}\n          rules={item.rules}\n          {...props}\n          type={key}\n          {...context}\n          updateActive={context.updateActive}\n        />\n      )}\n    </LoginContext.Consumer>\n  );\n});\n\nexport default LoginItem as LoginItemType;\n","import { createContext } from 'react';\n\nexport interface LoginContextProps {\n  tabUtil?: {\n    addTab: (id: string) => void;\n    removeTab: (id: string) => void;\n  };\n  updateActive?: (activeItem: { [key: string]: string } | string) => void;\n}\n\nconst LoginContext: React.Context<LoginContextProps> = createContext({});\n\nexport default LoginContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"antd-pro-pages-user-login-style-main\",\"icon\":\"antd-pro-pages-user-login-style-icon\",\"other\":\"antd-pro-pages-user-login-style-other\",\"register\":\"antd-pro-pages-user-login-style-register\"};"],"sourceRoot":""}