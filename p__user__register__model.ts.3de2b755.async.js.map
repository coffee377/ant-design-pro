{"version":3,"sources":["src/pages/user/register/model.ts","src/pages/user/register/service.ts"],"names":["_service","__webpack_require__","Model","namespace","state","status","undefined","effects","submit","_regenerator","default","mark","_ref","_ref2","payload","call","put","response","wrap","_context","prev","next","fakeRegister","sent","type","stop","reducers","registerHandle","_ref3","_objectSpread2","_request","_interopRequireDefault","_callee","params","abrupt","method","data"],"mappings":"sNAGAA,EAAAC,EAAA,QAuBMC,GACJC,UAAW,eAEXC,OACEC,YAAQC,GAGVC,SACGC,OADMC,EAAAC,QAAAC,KAAA,SAAAH,EAAAI,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,QAAAQ,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,OADTP,EADHF,EACGE,QAAaC,EADhBF,EACgBE,KAAMC,EADtBH,EACsBG,IADtBG,EAAAE,KAAA,EAEkBN,EAAKf,EAAAsB,aAAcR,GAFrC,OAGL,OADMG,EAFDE,EAAAI,KAAAJ,EAAAE,KAAA,EAGCL,GACJQ,KAAM,iBACNV,QAASG,IALN,wBAAAE,EAAAM,SAAAjB,MAUTkB,UACEC,eADQ,SACOvB,EADPwB,GACyB,IAATd,EAASc,EAATd,QACtB,SAAAe,EAAAnB,YACKN,GACHC,OAAQS,EAAQT,cAMTH,qKCrDf4B,EAAAC,EAAA9B,EAAA,kBAGsBqB,uFAAf,SAAAU,EAA4BC,GAA5B,OAAAxB,EAAAC,QAAAQ,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAe,OAAA,UACE,EAAAJ,EAAApB,SAAQ,iBACbyB,OAAQ,OACRC,KAAMH,KAHH,wBAAAd,EAAAM,SAAAO","file":"p__user__register__model.ts.3de2b755.async.js","sourcesContent":["import { AnyAction, Reducer } from 'redux';\n\nimport { EffectsCommandMap } from 'dva';\nimport { fakeRegister } from './service';\n\nexport interface StateType {\n  status?: 'ok' | 'error';\n  currentAuthority?: 'user' | 'guest' | 'admin';\n}\n\nexport type Effect = (\n  action: AnyAction,\n  effects: EffectsCommandMap & { select: <T>(func: (state: StateType) => T) => T },\n) => void;\n\nexport interface ModelType {\n  namespace: string;\n  state: StateType;\n  effects: {\n    submit: Effect;\n  };\n  reducers: {\n    registerHandle: Reducer<StateType>;\n  };\n}\n\nconst Model: ModelType = {\n  namespace: 'userRegister',\n\n  state: {\n    status: undefined,\n  },\n\n  effects: {\n    *submit({ payload }, { call, put }) {\n      const response = yield call(fakeRegister, payload);\n      yield put({\n        type: 'registerHandle',\n        payload: response,\n      });\n    },\n  },\n\n  reducers: {\n    registerHandle(state, { payload }) {\n      return {\n        ...state,\n        status: payload.status,\n      };\n    },\n  },\n};\n\nexport default Model;\n","import request from '@/utils/request';\nimport { UserRegisterParams } from './index';\n\nexport async function fakeRegister(params: UserRegisterParams) {\n  return request('/api/register', {\n    method: 'POST',\n    data: params,\n  });\n}\n"],"sourceRoot":""}