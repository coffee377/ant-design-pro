{"version":3,"sources":["src/pages/user/register/index.tsx","webpack:///./src/pages/user/register/style.less?7c15"],"names":["_locale","__webpack_require__","_react","_interopRequireWildcard","_link","_interopRequireDefault","_dva","_router","_style10","FormItem","_form","default","Item","Option","InputGroup","_input","Group","passwordStatusMap","ok","createElement","className","success","FormattedMessage","id","pass","warning","poor","error","passwordProgressMap","Register","_Component","_this","_classCallCheck2","this","state","count","confirmDirty","visible","help","prefix","interval","undefined","onGetCaptcha","setState","window","setInterval","clearInterval","getPasswordStatus","form","props","value","getFieldValue","length","handleSubmit","e","preventDefault","_this$props","dispatch","validateFields","force","err","values","type","payload","_objectSpread2","checkConfirm","rule","callback","formatMessage","checkPassword","_this$state","changePrefix","renderPasswordProgress","passwordStatus","concat","_progress","status","progress","strokeWidth","percent","showInfo","_inherits2","_createClass2","key","_this$props2","userRegister","account","_message2","push","pathname","_this$props3","submitting","getFieldDecorator","_this$state2","main","onSubmit","rules","required","message","size","placeholder","_popover","getPopupContainer","node","parentNode","content","style","padding","marginTop","overlayStyle","width","placement","validator","compact","_select","onChange","pattern","_row","gutter","_col","span","_button","disabled","getCaptcha","onClick","loading","submit","htmlType","login","to","Component","__decorate","connect","_ref","effects","create","module","exports","progress-pass"],"mappings":"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","file":"p__user__register.3c325e38.async.js","sourcesContent":["import { Button, Col, Form, Input, Popover, Progress, Row, Select, message } from 'antd';\nimport { FormattedMessage, formatMessage } from 'umi-plugin-react/locale';\nimport React, { Component } from 'react';\nimport { Dispatch } from 'redux';\nimport { FormComponentProps } from 'antd/es/form';\nimport Link from 'umi/link';\nimport { connect } from 'dva';\nimport router from 'umi/router';\n\nimport { StateType } from './model';\nimport styles from './style.less';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst InputGroup = Input.Group;\n\nconst passwordStatusMap = {\n  ok: (\n    <div className={styles.success}>\n      <FormattedMessage id=\"user-register.strength.strong\" />\n    </div>\n  ),\n  pass: (\n    <div className={styles.warning}>\n      <FormattedMessage id=\"user-register.strength.medium\" />\n    </div>\n  ),\n  poor: (\n    <div className={styles.error}>\n      <FormattedMessage id=\"user-register.strength.short\" />\n    </div>\n  ),\n};\n\nconst passwordProgressMap: {\n  ok: 'success';\n  pass: 'normal';\n  poor: 'exception';\n} = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception',\n};\n\ninterface RegisterProps extends FormComponentProps {\n  dispatch: Dispatch<any>;\n  userRegister: StateType;\n  submitting: boolean;\n}\ninterface RegisterState {\n  count: number;\n  confirmDirty: boolean;\n  visible: boolean;\n  help: string;\n  prefix: string;\n}\n\nexport interface UserRegisterParams {\n  mail: string;\n  password: string;\n  confirm: string;\n  mobile: string;\n  captcha: string;\n  prefix: string;\n}\n\n@connect(\n  ({\n    userRegister,\n    loading,\n  }: {\n    userRegister: StateType;\n    loading: {\n      effects: {\n        [key: string]: string;\n      };\n    };\n  }) => ({\n    userRegister,\n    submitting: loading.effects['userRegister/submit'],\n  }),\n)\nclass Register extends Component<\n  RegisterProps,\n  RegisterState\n> {\n  state: RegisterState = {\n    count: 0,\n    confirmDirty: false,\n    visible: false,\n    help: '',\n    prefix: '86',\n  };\n\n  interval: number | undefined = undefined;\n\n  componentDidUpdate() {\n    const { userRegister, form } = this.props;\n    const account = form.getFieldValue('mail');\n    if (userRegister.status === 'ok') {\n      message.success('注册成功！');\n      router.push({\n        pathname: '/user/register-result',\n        state: {\n          account,\n        },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onGetCaptcha = () => {\n    let count = 59;\n    this.setState({ count });\n    this.interval = window.setInterval(() => {\n      count -= 1;\n      this.setState({ count });\n      if (count === 0) {\n        clearInterval(this.interval);\n      }\n    }, 1000);\n  };\n\n  getPasswordStatus = () => {\n    const { form } = this.props;\n    const value = form.getFieldValue('password');\n    if (value && value.length > 9) {\n      return 'ok';\n    }\n    if (value && value.length > 5) {\n      return 'pass';\n    }\n    return 'poor';\n  };\n\n  handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { form, dispatch } = this.props;\n    form.validateFields({ force: true }, (err, values) => {\n      if (!err) {\n        const { prefix } = this.state;\n        dispatch({\n          type: 'userRegister/submit',\n          payload: {\n            ...values,\n            prefix,\n          },\n        });\n      }\n    });\n  };\n\n  checkConfirm = (rule: any, value: string, callback: (messgae?: string) => void) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback(formatMessage({ id: 'user-register.password.twice' }));\n    } else {\n      callback();\n    }\n  };\n\n  checkPassword = (rule: any, value: string, callback: (messgae?: string) => void) => {\n    const { visible, confirmDirty } = this.state;\n    if (!value) {\n      this.setState({\n        help: formatMessage({ id: 'user-register.password.required' }),\n        visible: !!value,\n      });\n      callback('error');\n    } else {\n      this.setState({\n        help: '',\n      });\n      if (!visible) {\n        this.setState({\n          visible: !!value,\n        });\n      }\n      if (value.length < 6) {\n        callback('error');\n      } else {\n        const { form } = this.props;\n        if (value && confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      }\n    }\n  };\n\n  changePrefix = (value: string) => {\n    this.setState({\n      prefix: value,\n    });\n  };\n\n  renderPasswordProgress = () => {\n    const { form } = this.props;\n    const value = form.getFieldValue('password');\n    const passwordStatus = this.getPasswordStatus();\n    return value && value.length ? (\n      <div className={styles[`progress-${passwordStatus}`]}>\n        <Progress\n          status={passwordProgressMap[passwordStatus]}\n          className={styles.progress}\n          strokeWidth={6}\n          percent={value.length * 10 > 100 ? 100 : value.length * 10}\n          showInfo={false}\n        />\n      </div>\n    ) : null;\n  };\n\n  render() {\n    const { form, submitting } = this.props;\n    const { getFieldDecorator } = form;\n    const { count, prefix, help, visible } = this.state;\n    return (\n      <div className={styles.main}>\n        <h3>\n          <FormattedMessage id=\"user-register.register.register\" />\n        </h3>\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem>\n            {getFieldDecorator('mail', {\n              rules: [\n                {\n                  required: true,\n                  message: formatMessage({ id: 'user-register.email.required' }),\n                },\n                {\n                  type: 'email',\n                  message: formatMessage({ id: 'user-register.email.wrong-format' }),\n                },\n              ],\n            })(\n              <Input\n                size=\"large\"\n                placeholder={formatMessage({ id: 'user-register.email.placeholder' })}\n              />,\n            )}\n          </FormItem>\n          <FormItem help={help}>\n            <Popover\n              getPopupContainer={node => {\n                if (node && node.parentNode) {\n                  return node.parentNode as HTMLElement;\n                }\n                return node;\n              }}\n              content={\n                <div style={{ padding: '4px 0' }}>\n                  {passwordStatusMap[this.getPasswordStatus()]}\n                  {this.renderPasswordProgress()}\n                  <div style={{ marginTop: 10 }}>\n                    <FormattedMessage id=\"user-register.strength.msg\" />\n                  </div>\n                </div>\n              }\n              overlayStyle={{ width: 240 }}\n              placement=\"right\"\n              visible={visible}\n            >\n              {getFieldDecorator('password', {\n                rules: [\n                  {\n                    validator: this.checkPassword,\n                  },\n                ],\n              })(\n                <Input\n                  size=\"large\"\n                  type=\"password\"\n                  placeholder={formatMessage({ id: 'user-register.password.placeholder' })}\n                />,\n              )}\n            </Popover>\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('confirm', {\n              rules: [\n                {\n                  required: true,\n                  message: formatMessage({ id: 'user-register.confirm-password.required' }),\n                },\n                {\n                  validator: this.checkConfirm,\n                },\n              ],\n            })(\n              <Input\n                size=\"large\"\n                type=\"password\"\n                placeholder={formatMessage({ id: 'user-register.confirm-password.placeholder' })}\n              />,\n            )}\n          </FormItem>\n          <FormItem>\n            <InputGroup compact>\n              <Select\n                size=\"large\"\n                value={prefix}\n                onChange={this.changePrefix}\n                style={{ width: '20%' }}\n              >\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n              </Select>\n              {getFieldDecorator('mobile', {\n                rules: [\n                  {\n                    required: true,\n                    message: formatMessage({ id: 'user-register.phone-number.required' }),\n                  },\n                  {\n                    pattern: /^\\d{11}$/,\n                    message: formatMessage({ id: 'user-register.phone-number.wrong-format' }),\n                  },\n                ],\n              })(\n                <Input\n                  size=\"large\"\n                  style={{ width: '80%' }}\n                  placeholder={formatMessage({ id: 'user-register.phone-number.placeholder' })}\n                />,\n              )}\n            </InputGroup>\n          </FormItem>\n          <FormItem>\n            <Row gutter={8}>\n              <Col span={16}>\n                {getFieldDecorator('captcha', {\n                  rules: [\n                    {\n                      required: true,\n                      message: formatMessage({ id: 'user-register.verification-code.required' }),\n                    },\n                  ],\n                })(\n                  <Input\n                    size=\"large\"\n                    placeholder={formatMessage({ id: 'user-register.verification-code.placeholder' })}\n                  />,\n                )}\n              </Col>\n              <Col span={8}>\n                <Button\n                  size=\"large\"\n                  disabled={!!count}\n                  className={styles.getCaptcha}\n                  onClick={this.onGetCaptcha}\n                >\n                  {count\n                    ? `${count} s`\n                    : formatMessage({ id: 'user-register.register.get-verification-code' })}\n                </Button>\n              </Col>\n            </Row>\n          </FormItem>\n          <FormItem>\n            <Button\n              size=\"large\"\n              loading={submitting}\n              className={styles.submit}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              <FormattedMessage id=\"user-register.register.register\" />\n            </Button>\n            <Link className={styles.login} to=\"/user/login\">\n              <FormattedMessage id=\"user-register.register.sign-in\" />\n            </Link>\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Form.create<RegisterProps>()(Register);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"antd-pro-pages-user-register-style-main\",\"getCaptcha\":\"antd-pro-pages-user-register-style-getCaptcha\",\"submit\":\"antd-pro-pages-user-register-style-submit\",\"login\":\"antd-pro-pages-user-register-style-login\",\"error\":\"antd-pro-pages-user-register-style-error\",\"success\":\"antd-pro-pages-user-register-style-success\",\"warning\":\"antd-pro-pages-user-register-style-warning\",\"progress-pass\":\"antd-pro-pages-user-register-style-progress-pass\",\"progress\":\"antd-pro-pages-user-register-style-progress\"};"],"sourceRoot":""}