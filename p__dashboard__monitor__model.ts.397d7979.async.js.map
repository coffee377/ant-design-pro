{"version":3,"sources":["src/pages/dashboard/monitor/service.ts","src/pages/dashboard/monitor/model.ts"],"names":["_request","_interopRequireDefault","__webpack_require__","queryTags","_callee","_regenerator","default","wrap","_context","prev","next","abrupt","stop","_service","Model","namespace","state","tags","effects","fetchTags","mark","_","_ref","call","put","response","sent","type","payload","list","reducers","saveTags","action","_objectSpread2"],"mappings":"oNAAAA,EAAAC,EAAAC,EAAA,kBAEsBC,sFAAf,SAAAC,IAAA,OAAAC,EAAAC,QAAAC,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,UACE,EAAAX,EAAAM,SAAQ,cADV,wBAAAE,EAAAI,SAAAR,wLCEPS,EAAAX,EAAA,QAsBMY,GACJC,UAAW,mBAEXC,OACEC,SAGFC,SACGC,UADMd,EAAAC,QAAAc,KAAA,SAAAD,EACIE,EADJC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAApB,EAAAC,QAAAC,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,OADHa,EADTD,EACSC,KAAMC,EADfF,EACeE,IADfhB,EAAAE,KAAA,EAEkBa,EAAKV,EAAAV,WAFvB,OAGL,OADMsB,EAFDjB,EAAAkB,KAAAlB,EAAAE,KAAA,EAGCc,GACJG,KAAM,WACNC,QAASH,EAASI,OALf,wBAAArB,EAAAI,SAAAO,MAUTW,UACEC,SADQ,SACCf,EAAOgB,GACd,SAAAC,EAAA3B,YACKU,GACHC,KAAMe,EAAOJ,eAMNd","file":"p__dashboard__monitor__model.ts.397d7979.async.js","sourcesContent":["import request from '@/utils/request';\n\nexport async function queryTags() {\n  return request('/api/tags');\n}\n","import { AnyAction, Reducer } from 'redux';\n\nimport { EffectsCommandMap } from 'dva';\nimport { TagType } from './data.d';\nimport { queryTags } from './service';\n\nexport interface StateType {\n  tags: TagType[];\n}\n\nexport type Effect = (\n  action: AnyAction,\n  effects: EffectsCommandMap & { select: <T>(func: (state: StateType) => T) => T },\n) => void;\n\nexport interface ModelType {\n  namespace: string;\n  state: StateType;\n  effects: {\n    fetchTags: Effect;\n  };\n  reducers: {\n    saveTags: Reducer<StateType>;\n  };\n}\n\nconst Model: ModelType = {\n  namespace: 'dashboardMonitor',\n\n  state: {\n    tags: [],\n  },\n\n  effects: {\n    *fetchTags(_, { call, put }) {\n      const response = yield call(queryTags);\n      yield put({\n        type: 'saveTags',\n        payload: response.list,\n      });\n    },\n  },\n\n  reducers: {\n    saveTags(state, action) {\n      return {\n        ...state,\n        tags: action.payload,\n      };\n    },\n  },\n};\n\nexport default Model;\n"],"sourceRoot":""}